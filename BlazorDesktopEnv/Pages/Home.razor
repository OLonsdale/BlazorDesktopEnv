@page "/"

<PageTitle>Home</PageTitle>

mouse(@mousex, @mousey)

<style>
    #container {
        width: 90vw;
        height: 90vh;
        outline: 1px solid blue;
    }
</style>

<button @onclick="AddWindow">Add Window</button>

<div id="container" @onmousedown="MouseDown" @onmouseup="MouseUp" @onmousemove="MouseMove">
    @foreach (var win in windowRefs)
    {
        <WindowCom @ref="win.Ref" />
    }
</div>

@code {
    double mousex = 0;
    double mousey = 0;

    class WindowReference
    {
        public WindowCom? Ref { get; set; }
    }

    List<WindowReference> windowRefs = [];

    protected override void OnInitialized()
    {
        windowRefs.Add(new WindowReference()); // Add an empty reference entry
    }

    async Task MouseMove(MouseEventArgs mouse)
    {
        mousex = mouse.ClientX;
        mousey = mouse.ClientY;
    }

    async Task MouseDown(MouseEventArgs mouse)
    {
        foreach (var win in windowRefs)
        {
            if (win.Ref != null && 
                mouse.ClientX > win.Ref.windowLeft && mouse.ClientX < win.Ref.windowRight && 
                mouse.ClientY < win.Ref.windowBottom && mouse.ClientY > win.Ref.windowTop)
            {
                win.Ref.HandleMouseDown(mouse);
                return;
            }
        }
    }

    async Task MouseUp(MouseEventArgs mouse)
    {
        foreach (var win in windowRefs)
        {
            win.Ref?.HandleMouseUp(mouse);
        }
    }

    void AddWindow()
    {
        windowRefs.Add(new WindowReference());
        
    }
}